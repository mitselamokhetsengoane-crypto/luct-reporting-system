{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api'\n});\n\n// Add token to requests\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  }\n  return req;\n});\n\n// Response interceptor for error handling\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: credentials => API.post('/auth/login', credentials),\n  register: userData => API.post('/auth/register', userData),\n  getMe: () => API.get('/auth/me'),\n  getClasses: () => API.get('/auth/classes')\n};\nexport const reportAPI = {\n  create: reportData => API.post('/reports', reportData),\n  getMyReports: () => API.get('/reports/my-reports'),\n  getClassReports: classId => API.get(`/reports/class/${classId}`),\n  signReport: (reportId, signature) => API.patch(`/reports/${reportId}/sign`, {\n    signature\n  }),\n  approveReport: reportId => API.patch(`/reports/${reportId}/approve`),\n  getReportById: reportId => API.get(`/reports/${reportId}`),\n  downloadMyReports: () => API.get('/reports/download/my-reports', {\n    responseType: 'blob'\n  })\n};\nexport const complaintAPI = {\n  create: complaintData => API.post('/complaints', complaintData),\n  getMyComplaints: () => API.get('/complaints/my-complaints'),\n  getComplaintsForMe: () => API.get('/complaints/for-me'),\n  respond: (complaintId, response) => API.patch(`/complaints/${complaintId}/respond`, {\n    response\n  }),\n  downloadMyComplaints: () => API.get('/complaints/download/my-complaints', {\n    responseType: 'blob'\n  })\n};\nexport const assignmentAPI = {\n  getCourses: () => API.get('/assignments/courses'),\n  getClasses: () => API.get('/assignments/classes'),\n  getLecturers: () => API.get('/assignments/lecturers'),\n  assignCourse: assignmentData => API.post('/assignments/assign', assignmentData),\n  getMyAssignments: () => API.get('/assignments/my-assignments'),\n  getAllAssignments: () => API.get('/assignments/all-assignments'),\n  downloadAssignments: () => API.get('/assignments/download/assignments', {\n    responseType: 'blob'\n  })\n};\n\n// Download helper function\nexport const downloadFile = (blob, filename) => {\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","register","userData","getMe","get","getClasses","reportAPI","reportData","getMyReports","getClassReports","classId","signReport","reportId","signature","patch","approveReport","getReportById","downloadMyReports","responseType","complaintAPI","complaintData","getMyComplaints","getComplaintsForMe","respond","complaintId","downloadMyComplaints","assignmentAPI","getCourses","getLecturers","assignCourse","assignmentData","getMyAssignments","getAllAssignments","downloadAssignments","downloadFile","blob","filename","url","URL","createObjectURL","link","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["C:/Users/HP/luct reporting system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n});\r\n\r\n// Add token to requests\r\nAPI.interceptors.request.use((req) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return req;\r\n});\r\n\r\n// Response interceptor for error handling\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (credentials) => API.post('/auth/login', credentials),\r\n  register: (userData) => API.post('/auth/register', userData),\r\n  getMe: () => API.get('/auth/me'),\r\n  getClasses: () => API.get('/auth/classes'),\r\n};\r\n\r\nexport const reportAPI = {\r\n  create: (reportData) => API.post('/reports', reportData),\r\n  getMyReports: () => API.get('/reports/my-reports'),\r\n  getClassReports: (classId) => API.get(`/reports/class/${classId}`),\r\n  signReport: (reportId, signature) => API.patch(`/reports/${reportId}/sign`, { signature }),\r\n  approveReport: (reportId) => API.patch(`/reports/${reportId}/approve`),\r\n  getReportById: (reportId) => API.get(`/reports/${reportId}`),\r\n  downloadMyReports: () => API.get('/reports/download/my-reports', { responseType: 'blob' }),\r\n};\r\n\r\nexport const complaintAPI = {\r\n  create: (complaintData) => API.post('/complaints', complaintData),\r\n  getMyComplaints: () => API.get('/complaints/my-complaints'),\r\n  getComplaintsForMe: () => API.get('/complaints/for-me'),\r\n  respond: (complaintId, response) => API.patch(`/complaints/${complaintId}/respond`, { response }),\r\n  downloadMyComplaints: () => API.get('/complaints/download/my-complaints', { responseType: 'blob' }),\r\n};\r\n\r\nexport const assignmentAPI = {\r\n  getCourses: () => API.get('/assignments/courses'),\r\n  getClasses: () => API.get('/assignments/classes'),\r\n  getLecturers: () => API.get('/assignments/lecturers'),\r\n  assignCourse: (assignmentData) => API.post('/assignments/assign', assignmentData),\r\n  getMyAssignments: () => API.get('/assignments/my-assignments'),\r\n  getAllAssignments: () => API.get('/assignments/all-assignments'),\r\n  downloadAssignments: () => API.get('/assignments/download/assignments', { responseType: 'blob' }),\r\n};\r\n\r\n// Download helper function\r\nexport const downloadFile = (blob, filename) => {\r\n  const url = window.URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = filename;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}