{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\luct reporting system\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { reportAPI, complaintAPI, assignmentAPI, ratingAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [dashboardData, setDashboardData] = useState({\n    reports: [],\n    complaints: [],\n    assignments: [],\n    ratings: [],\n    stats: {\n      totalReports: 0,\n      pendingReports: 0,\n      totalComplaints: 0,\n      pendingComplaints: 0,\n      totalAssignments: 0,\n      totalRatings: 0,\n      averageRating: 0\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadDashboardData();\n  }, [user]);\n  const loadDashboardData = async () => {\n    try {\n      var _reports, _reports2, _complaints, _complaints2, _assignments, _ratings;\n      setLoading(true);\n      setError(null);\n      console.log('Loading dashboard data for user:', user);\n      let reports = [];\n      let complaints = [];\n      let assignments = [];\n      let ratings = [];\n\n      // Validate user role\n      if (!user || !user.role) {\n        throw new Error('User role not defined');\n      }\n\n      // Load data based on user role\n      switch (user.role) {\n        case 'pl':\n        case 'prl':\n        case 'fmg':\n          try {\n            console.log('Loading management data...');\n            const [reportsResponse, complaintsResponse, assignmentsResponse] = await Promise.allSettled([reportAPI.getPendingApprovalReports(), complaintAPI.getComplaintsForMe(), user.role === 'pl' ? assignmentAPI.getAllAssignments() : Promise.resolve({\n              data: []\n            })]);\n\n            // Handle each promise result\n            reports = handleAPIResponse(reportsResponse, 'reports') || [];\n            complaints = handleAPIResponse(complaintsResponse, 'complaints') || [];\n            assignments = handleAPIResponse(assignmentsResponse, 'assignments') || [];\n            console.log('Management data loaded:', {\n              reports,\n              complaints,\n              assignments\n            });\n          } catch (error) {\n            console.error('Error loading management data:', error);\n            setError(`Failed to load management data: ${error.message}`);\n          }\n          break;\n        case 'lecturer':\n          try {\n            var _handleAPIResponse;\n            console.log('Loading lecturer data for user ID:', user.id);\n            if (!user.id) {\n              throw new Error('Lecturer ID not found');\n            }\n            const [lecturerReports, lecturerComplaints, lecturerAssignments, lecturerRatings] = await Promise.allSettled([reportAPI.getMyReports(), complaintAPI.getMyComplaints(), assignmentAPI.getMyAssignments(), ratingAPI.getLecturerRatings(user.id)]);\n            reports = handleAPIResponse(lecturerReports, 'lecturer reports') || [];\n            complaints = handleAPIResponse(lecturerComplaints, 'lecturer complaints') || [];\n            assignments = handleAPIResponse(lecturerAssignments, 'lecturer assignments') || [];\n            ratings = ((_handleAPIResponse = handleAPIResponse(lecturerRatings, 'lecturer ratings')) === null || _handleAPIResponse === void 0 ? void 0 : _handleAPIResponse.ratings) || [];\n            console.log('Lecturer data loaded:', {\n              reports,\n              complaints,\n              assignments,\n              ratings\n            });\n          } catch (error) {\n            console.error('Error loading lecturer data:', error);\n            setError(`Failed to load lecturer data: ${error.message}`);\n          }\n          break;\n        case 'student':\n          try {\n            console.log('Loading student data for class ID:', user.class_id);\n            if (!user.class_id) {\n              throw new Error('Student class ID not found');\n            }\n            const [studentReports, studentComplaints, studentRatings] = await Promise.allSettled([reportAPI.getClassReports(user.class_id), complaintAPI.getMyComplaints(), ratingAPI.getMyRatings()]);\n            reports = handleAPIResponse(studentReports, 'student reports') || [];\n            complaints = handleAPIResponse(studentComplaints, 'student complaints') || [];\n            ratings = handleAPIResponse(studentRatings, 'student ratings') || [];\n            console.log('Student data loaded:', {\n              reports,\n              complaints,\n              ratings\n            });\n          } catch (error) {\n            console.error('Error loading student data:', error);\n            setError(`Failed to load student data: ${error.message}`);\n          }\n          break;\n        default:\n          console.warn('Unknown user role:', user.role);\n          setError(`Unknown user role: ${user.role}`);\n          break;\n      }\n\n      // Calculate statistics\n      const stats = {\n        totalReports: ((_reports = reports) === null || _reports === void 0 ? void 0 : _reports.length) || 0,\n        pendingReports: ((_reports2 = reports) === null || _reports2 === void 0 ? void 0 : _reports2.filter(report => report.status === 'pending_prl' || report.status === 'pending_student').length) || 0,\n        totalComplaints: ((_complaints = complaints) === null || _complaints === void 0 ? void 0 : _complaints.length) || 0,\n        pendingComplaints: ((_complaints2 = complaints) === null || _complaints2 === void 0 ? void 0 : _complaints2.filter(complaint => complaint.status === 'pending').length) || 0,\n        totalAssignments: ((_assignments = assignments) === null || _assignments === void 0 ? void 0 : _assignments.length) || 0,\n        totalRatings: ((_ratings = ratings) === null || _ratings === void 0 ? void 0 : _ratings.length) || 0,\n        averageRating: user.role === 'lecturer' ? await calculateLecturerAverageRating(user.id) : 0\n      };\n      setDashboardData({\n        reports: reports || [],\n        complaints: complaints || [],\n        assignments: assignments || [],\n        ratings: ratings || [],\n        stats\n      });\n    } catch (error) {\n      console.error('Error loading dashboard data:', error);\n      setError(`Failed to load dashboard: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to handle API responses\n  const handleAPIResponse = (promiseResult, dataType) => {\n    if (promiseResult.status === 'fulfilled') {\n      const response = promiseResult.value;\n      if (response && response.data) {\n        console.log(`${dataType} data:`, response.data);\n        return response.data;\n      } else {\n        console.warn(`No data found in ${dataType} response:`, response);\n        return null;\n      }\n    } else {\n      console.error(`Error fetching ${dataType}:`, promiseResult.reason);\n      return null;\n    }\n  };\n  const calculateLecturerAverageRating = async lecturerId => {\n    try {\n      var _response$data;\n      console.log('Calculating average rating for lecturer:', lecturerId);\n      const response = await ratingAPI.getLecturerRatings(lecturerId);\n      const average = (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.average_rating) || 0;\n      console.log('Average rating calculated:', average);\n      return average;\n    } catch (error) {\n      console.error('Error calculating average rating:', error);\n      return 0;\n    }\n  };\n\n  // Rest of your component remains the same...\n  const getRoleSpecificTitle = () => {\n    switch (user.role) {\n      case 'pl':\n        return 'Program Leader Dashboard';\n      case 'prl':\n        return 'Program Review Leader Dashboard';\n      case 'fmg':\n        return 'Faculty Management Dashboard';\n      case 'lecturer':\n        return 'Lecturer Dashboard';\n      case 'student':\n        return 'Student Dashboard';\n      default:\n        return 'Dashboard';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), \"Loading dashboard data...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unable to Load Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadDashboardData,\n          className: \"btn btn-primary\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: getRoleSpecificTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getRoleSpecificDescription()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"btn btn-secondary\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"close-btn\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"E0qEhCrfAT3IzikjLzO0cJQ9dXw=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","reportAPI","complaintAPI","assignmentAPI","ratingAPI","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","dashboardData","setDashboardData","reports","complaints","assignments","ratings","stats","totalReports","pendingReports","totalComplaints","pendingComplaints","totalAssignments","totalRatings","averageRating","loading","setLoading","activeTab","setActiveTab","error","setError","loadDashboardData","_reports","_reports2","_complaints","_complaints2","_assignments","_ratings","console","log","role","Error","reportsResponse","complaintsResponse","assignmentsResponse","Promise","allSettled","getPendingApprovalReports","getComplaintsForMe","getAllAssignments","resolve","data","handleAPIResponse","message","_handleAPIResponse","id","lecturerReports","lecturerComplaints","lecturerAssignments","lecturerRatings","getMyReports","getMyComplaints","getMyAssignments","getLecturerRatings","class_id","studentReports","studentComplaints","studentRatings","getClassReports","getMyRatings","warn","length","filter","report","status","complaint","calculateLecturerAverageRating","promiseResult","dataType","response","value","reason","lecturerId","_response$data","average","average_rating","getRoleSpecificTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","getRoleSpecificDescription","_c","$RefreshReg$"],"sources":["C:/Users/HP/luct reporting system/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { reportAPI, complaintAPI, assignmentAPI, ratingAPI } from '../services/api';\r\n\r\nconst Dashboard = ({ user, onLogout }) => {\r\n  const [dashboardData, setDashboardData] = useState({\r\n    reports: [],\r\n    complaints: [],\r\n    assignments: [],\r\n    ratings: [],\r\n    stats: {\r\n      totalReports: 0,\r\n      pendingReports: 0,\r\n      totalComplaints: 0,\r\n      pendingComplaints: 0,\r\n      totalAssignments: 0,\r\n      totalRatings: 0,\r\n      averageRating: 0\r\n    }\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, [user]);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      console.log('Loading dashboard data for user:', user);\r\n      \r\n      let reports = [];\r\n      let complaints = [];\r\n      let assignments = [];\r\n      let ratings = [];\r\n\r\n      // Validate user role\r\n      if (!user || !user.role) {\r\n        throw new Error('User role not defined');\r\n      }\r\n\r\n      // Load data based on user role\r\n      switch (user.role) {\r\n        case 'pl':\r\n        case 'prl':\r\n        case 'fmg':\r\n          try {\r\n            console.log('Loading management data...');\r\n            const [reportsResponse, complaintsResponse, assignmentsResponse] = await Promise.allSettled([\r\n              reportAPI.getPendingApprovalReports(),\r\n              complaintAPI.getComplaintsForMe(),\r\n              user.role === 'pl' ? assignmentAPI.getAllAssignments() : Promise.resolve({ data: [] })\r\n            ]);\r\n            \r\n            // Handle each promise result\r\n            reports = handleAPIResponse(reportsResponse, 'reports') || [];\r\n            complaints = handleAPIResponse(complaintsResponse, 'complaints') || [];\r\n            assignments = handleAPIResponse(assignmentsResponse, 'assignments') || [];\r\n            \r\n            console.log('Management data loaded:', { reports, complaints, assignments });\r\n          } catch (error) {\r\n            console.error('Error loading management data:', error);\r\n            setError(`Failed to load management data: ${error.message}`);\r\n          }\r\n          break;\r\n\r\n        case 'lecturer':\r\n          try {\r\n            console.log('Loading lecturer data for user ID:', user.id);\r\n            if (!user.id) {\r\n              throw new Error('Lecturer ID not found');\r\n            }\r\n\r\n            const [lecturerReports, lecturerComplaints, lecturerAssignments, lecturerRatings] = await Promise.allSettled([\r\n              reportAPI.getMyReports(),\r\n              complaintAPI.getMyComplaints(),\r\n              assignmentAPI.getMyAssignments(),\r\n              ratingAPI.getLecturerRatings(user.id)\r\n            ]);\r\n            \r\n            reports = handleAPIResponse(lecturerReports, 'lecturer reports') || [];\r\n            complaints = handleAPIResponse(lecturerComplaints, 'lecturer complaints') || [];\r\n            assignments = handleAPIResponse(lecturerAssignments, 'lecturer assignments') || [];\r\n            ratings = handleAPIResponse(lecturerRatings, 'lecturer ratings')?.ratings || [];\r\n            \r\n            console.log('Lecturer data loaded:', { reports, complaints, assignments, ratings });\r\n          } catch (error) {\r\n            console.error('Error loading lecturer data:', error);\r\n            setError(`Failed to load lecturer data: ${error.message}`);\r\n          }\r\n          break;\r\n\r\n        case 'student':\r\n          try {\r\n            console.log('Loading student data for class ID:', user.class_id);\r\n            if (!user.class_id) {\r\n              throw new Error('Student class ID not found');\r\n            }\r\n\r\n            const [studentReports, studentComplaints, studentRatings] = await Promise.allSettled([\r\n              reportAPI.getClassReports(user.class_id),\r\n              complaintAPI.getMyComplaints(),\r\n              ratingAPI.getMyRatings()\r\n            ]);\r\n            \r\n            reports = handleAPIResponse(studentReports, 'student reports') || [];\r\n            complaints = handleAPIResponse(studentComplaints, 'student complaints') || [];\r\n            ratings = handleAPIResponse(studentRatings, 'student ratings') || [];\r\n            \r\n            console.log('Student data loaded:', { reports, complaints, ratings });\r\n          } catch (error) {\r\n            console.error('Error loading student data:', error);\r\n            setError(`Failed to load student data: ${error.message}`);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          console.warn('Unknown user role:', user.role);\r\n          setError(`Unknown user role: ${user.role}`);\r\n          break;\r\n      }\r\n\r\n      // Calculate statistics\r\n      const stats = {\r\n        totalReports: reports?.length || 0,\r\n        pendingReports: reports?.filter(report => \r\n          report.status === 'pending_prl' || report.status === 'pending_student'\r\n        ).length || 0,\r\n        totalComplaints: complaints?.length || 0,\r\n        pendingComplaints: complaints?.filter(complaint => \r\n          complaint.status === 'pending'\r\n        ).length || 0,\r\n        totalAssignments: assignments?.length || 0,\r\n        totalRatings: ratings?.length || 0,\r\n        averageRating: user.role === 'lecturer' ? \r\n          (await calculateLecturerAverageRating(user.id)) : 0\r\n      };\r\n\r\n      setDashboardData({\r\n        reports: reports || [],\r\n        complaints: complaints || [],\r\n        assignments: assignments || [],\r\n        ratings: ratings || [],\r\n        stats\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n      setError(`Failed to load dashboard: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to handle API responses\r\n  const handleAPIResponse = (promiseResult, dataType) => {\r\n    if (promiseResult.status === 'fulfilled') {\r\n      const response = promiseResult.value;\r\n      if (response && response.data) {\r\n        console.log(`${dataType} data:`, response.data);\r\n        return response.data;\r\n      } else {\r\n        console.warn(`No data found in ${dataType} response:`, response);\r\n        return null;\r\n      }\r\n    } else {\r\n      console.error(`Error fetching ${dataType}:`, promiseResult.reason);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const calculateLecturerAverageRating = async (lecturerId) => {\r\n    try {\r\n      console.log('Calculating average rating for lecturer:', lecturerId);\r\n      const response = await ratingAPI.getLecturerRatings(lecturerId);\r\n      const average = response?.data?.average_rating || 0;\r\n      console.log('Average rating calculated:', average);\r\n      return average;\r\n    } catch (error) {\r\n      console.error('Error calculating average rating:', error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // Rest of your component remains the same...\r\n  const getRoleSpecificTitle = () => {\r\n    switch (user.role) {\r\n      case 'pl': return 'Program Leader Dashboard';\r\n      case 'prl': return 'Program Review Leader Dashboard';\r\n      case 'fmg': return 'Faculty Management Dashboard';\r\n      case 'lecturer': return 'Lecturer Dashboard';\r\n      case 'student': return 'Student Dashboard';\r\n      default: return 'Dashboard';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"loading\">\r\n          <div className=\"spinner\"></div>\r\n          Loading dashboard data...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <div className=\"error-state\">\r\n          <h2>Unable to Load Dashboard</h2>\r\n          <p>{error}</p>\r\n          <button onClick={loadDashboardData} className=\"btn btn-primary\">\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Your existing JSX remains the same */}\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"header-content\">\r\n          <h1>{getRoleSpecificTitle()}</h1>\r\n          <p>{getRoleSpecificDescription()}</p>\r\n        </div>\r\n        <button onClick={onLogout} className=\"btn btn-secondary\">\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Add error display */}\r\n      {error && (\r\n        <div className=\"alert alert-error\">\r\n          <strong>Error:</strong> {error}\r\n          <button onClick={() => setError(null)} className=\"close-btn\">×</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Rest of your component JSX */}\r\n      {/* ... */}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}